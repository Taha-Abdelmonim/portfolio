/// Overlay Mixin
@mixin overlay($color, $opacity) {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba($color, $opacity);
}

// Box shadows
//     box-shadow: 4px 4px 12px #0004; // black
// box-shadow: 0px 2px 4px #0008, 0px -1px 1px #fff; // white
@mixin box-shadow($shadow...) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

/* arrow */
@mixin arrow($direction, $element, $bColor, $left, $top, $zIndex) {
  &::#{$element} {
    content: "";
    position: absolute;
    z-index: $zIndex;
    border: 20px solid transparent;
    @if $direction == "top" {
      top: $top + px;
      left: $left;
      transform: translateX(-50%);
      border-bottom-color: $bColor;
    } @else if $direction == "right" {
      right: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-left-color: $bColor;
    } @else if $direction == "bottom" {
      bottom: -40px;
      left: 50%;
      transform: translateX(-50%);
      border-top-color: $bColor;
    } @else if $direction == "left" {
      left: -40px;
      top: 50%;
      transform: translateY(-50%);
      border-right-color: $bColor;
    } @else {
      @error "#{$direction} is not a valid direction";
    }
  }
}

/* after border */
@mixin border-after {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    top: 43px;
    left: 50%;
    transform: translateX(-50%);
    width: 100%;
    height: 1px;
    background-color: var(--site-color);
  }
}

/* back-hover */
@mixin back-hover($select, $backColor, $direction) {
  position: relative;
  overflow: hidden;
  z-index: 1;
  &::#{$select} {
    content: "";
    position: absolute;
    background: $backColor;
    transition: var(--transition);
    z-index: -1;
    @if $direction == "top" {
      top: 0;
      left: 0;
      width: 100%;
      height: 0;
    } @else if $direction == "right" {
      right: 0;
      top: 0;
      height: 100%;
      width: 0;
    } @else if $direction == "bottom" {
      bottom: 0;
      left: 0;
      width: 100%;
      height: 0;
    } @else if $direction == "left" {
      left: 0;
      top: 0;
      height: 100%;
      width: 0;
    } @else {
      @error "#{$direction} is not a valid direction";
    }
  }
  @if $direction == "top" {
    &:hover::#{$select} {
      height: 100%;
    }
  } @else if $direction == "right" {
    &:hover::#{$select} {
      width: 100%;
    }
  } @else if $direction == "bottom" {
    &:hover::#{$select} {
      height: 100%;
    }
  } @else if $direction == "left" {
    &:hover::#{$select} {
      width: 100%;
    }
  } @else {
    @error "#{$direction} is not a valid direction";
  }
}

//  with width
@mixin back-hover-width($backColor, $direction) {
  position: relative;
  overflow: hidden;
  z-index: 1;
  // after
  &::after {
    content: "";
    position: absolute;
    background: $backColor;
    transition: var(--main-transition);
    z-index: -1;
    @if $direction == "top" {
      top: 0;
      left: 0;
      width: 100%;
      height: 0;
    } @else if $direction == "left" {
      left: 0;
      top: 0;
      height: 100%;
      width: 0;
    } @else {
      @error "#{$direction} is not a valid direction";
    }
  }
  @if $direction == "top" {
    &:hover::after {
      height: 50%;
    }
  } @else if $direction == "left" {
    &:hover::after {
      width: 50%;
    }
  } @else {
    @error "#{$direction} is not a valid direction";
  }
  // before
  &::before {
    content: "";
    position: absolute;
    background: $backColor;
    transition: var(--main-transition);
    z-index: -1;
    @if $direction == "top" {
      bottom: 0;
      left: 0;
      width: 100%;
      height: 0;
    } @else if $direction == "left" {
      right: 0;
      top: 0;
      height: 100%;
      width: 0;
    } @else {
      @error "#{$direction} is not a valid direction";
    }
  }
  @if $direction == "top" {
    &:hover::before {
      height: 50%;
    }
  } @else if $direction == "left" {
    &:hover::before {
      width: 50%;
    }
  } @else {
    @error "#{$direction} is not a valid direction";
  }
}

/* filter */
@mixin back-transparent($translateY) {
  background-color: rgba(255, 255, 255, 0.02);
  backdrop-filter: blur(9px);
  border-top: 1px solid #fff2;
  border-left: 1px solid #fff2;
  box-shadow: 4px 4px 12px #0004;
  overflow: hidden;
}

/* Start keyframes Scale */
@keyframes scale {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.5);
  }
  100% {
    transform: scale(1);
  }
}
